{#
/**
 * @file
 * Theme override to display a taxonomy term.
 *
 * Available variables:
 * - url: URL of the current term.
 * - name: (optional) Name of the current term.
 * - content: Items for the content of the term (fields and description).
 *   Use 'content' to print them all, or print a subset such as
 *   'content.description'. Use the following code to exclude the
 *   printing of a given child element:
 *   @code
 *   {{ content|without('description') }}
 *   @endcode
 * - attributes: HTML attributes for the wrapper.
 * - page: Flag for the full page state.
 * - term: The taxonomy term entity, including:
 *   - id: The ID of the taxonomy term.
 *   - bundle: Machine name of the current vocabulary.
 * - view_mode: View mode, e.g. 'full', 'teaser', etc.
 *
 * Additional variables:
 * - local_tasks: view, edit etc. menu items.
 * - title: page title block.
 *
 * @see template_preprocess_taxonomy_term()
 * @see common_design_subtheme_preprocess_taxonomy_term()
 */
#}
{{ attach_library('common_design_subtheme/rw-disasters') }}

{{ local_tasks }}
{% set disaster_type = term.field_primary_disaster_type.entity.field_disaster_type_code.value %}
{% set disaster_status = term.getModerationStatus() %}
<article{{ attributes
  .addClass([
    'taxonomy-term',
    'taxonomy-term--' ~ term.bundle(),
    'taxonomy-term--full',
    'taxonomy-term--' ~ term.bundle() ~ '--full',
    'rw-page--sectioned',
    'rw-article',
    'rw-article--' ~ term.bundle(),
  ])
  .setAttribute('data-id', term.id())
  .setAttribute('data-disaster-type', disaster_type)
  .setAttribute('data-disaster-status', disaster_status)
}}>
  <header>
    {{ title }}

    {{ render_var({
      '#theme': 'reliefweb_entities_entity_meta',
      '#meta': {
        'status': {
          'type': 'simple',
          'label': 'Status'|t,
          'value': term.getModerationStatusLabel(),
          'value_attributes': create_attribute()
            .addClass('rw-entity-meta__tag-value--status--' ~ disaster_status|clean_class)
        },
        'glide': {
          'type': 'simple',
          'label': 'Glide'|t,
          'value': term.field_glide.value,
        },
      }
    }) }}
  </header>

  {{ term.getPageContent() }}

  {% if content.reliefweb_bookmarks_link is not empty %}
    <footer>
      {{ content.reliefweb_bookmarks_link }}
    </footer>
  {% endif %}

</article>
