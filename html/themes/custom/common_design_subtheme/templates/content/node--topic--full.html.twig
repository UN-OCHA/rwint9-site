{#
/**
 * @file
 * Theme override to display a job node in full view mode.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Additional variables:
 * - local_tasks: view, edit etc. menu items.
 * - title: page title block.
 *
 * @see template_preprocess_node()
 * @see common_design_preprocess_node()
 * @see \Drupal\reliefweb_entities\Entity\Job.php
 */
#}
{{ attach_library('common_design_subtheme/rw-article') }}
{{ attach_library('common_design_subtheme/rw-report') }}
{{ attach_library('common_design_subtheme/rw-document') }}
{{ attach_library('common_design_subtheme/rw-topics') }}
{{ attach_library('common_design_subtheme/rw-useful-links') }}

{% set icon = node.getIcon() %}

{{ local_tasks }}
<article{{ attributes
  .addClass([
    'node',
    'node--' ~ node.bundle(),
    'node--full',
    'node--' ~ node.bundle() ~ '--full',
    'rw-article',
    'rw-article--' ~ node.bundle(),
    icon is not empty ? 'rw-article--' ~ node.bundle() ~ '--with-icon',
    'rw-page--sectioned',
    'rw-document',
  ])
  .setAttribute('data-id', node.id())
}}>

  <header{{ create_attribute()
    .addClass([
      'rw-article__header',
      icon is not empty ? 'rw-article__header--with-icon',
    ])
  }}>
    {% if icon is not empty %}
      <div class="rw-article--topic__icon">
        {{ render_var({
          '#theme': 'image_style',
          '#style_name': 'icon',
          '#uri': icon.uri,
          '#width': icon.width,
          '#height': icon.height
        }) }}
      </div>
    {% endif %}

    {{ title }}
  </header>

  {{ node.getPageContent() }}

  {% if content.reliefweb_bookmarks_link is not empty %}
    <footer>
      {{ content.reliefweb_bookmarks_link }}
    </footer>
  {% endif %}

</article>
