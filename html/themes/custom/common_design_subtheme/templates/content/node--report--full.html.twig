{#
/**
 * @file
 * Theme override to display a report node in full view mode.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * Additional variables:
 * - local_tasks: view, edit etc. menu items.
 * - title: page title block.
 *
 * @see template_preprocess_node()
 * @see common_design_preprocess_node()
 * @see \Drupal\reliefweb_entities\Entity\Report.php
 */
#}
{{ attach_library('common_design_subtheme/rw-document') }}
{{ attach_library('common_design_subtheme/rw-related-content') }}

{% set meta = node.getEntityMeta() %}
{% set image = node.getEntityImage() %}

{{ local_tasks }}
<article{{ attributes
  .addClass([
    'node',
    'node--' ~ node.bundle(),
    'node--full',
    'node--' ~ node.bundle() ~ '--full',
    'rw-article',
    'rw-article--' ~ node.bundle(),
    'rw-document',
  ])
  .setAttribute('data-id', node.id())
}}>
  <header class="rw-article__header rw-article__header--with-meta">
    {{ render_var({
      '#theme': 'reliefweb_entities_entity_country_slug',
      '#countries': meta.country,
    }) }}

    {{ title|merge({'#title_attributes': title_attributes.addClass('rw-article__title')}) }}

    {{ render_var({
      '#theme': 'reliefweb_entities_entity_meta',
      '#meta': {
        'format': {
          'type': 'simple',
          'label': 'Format'|t,
          'value': (meta.format|first).name,
          'label_attributes': create_attribute()
            .addClass('visually-hidden'),
          'value_attributes': create_attribute()
            .addClass('rw-entity-meta__tag-value--format--' ~ (meta.format|first).name|clean_class),
        },
        'source': {
          'type': 'taglist',
          'label': meta.source|length > 1 ? 'Sources'|t : 'Source'|t,
          'value': meta.source,
          'count': 3,
          'sort': 'shortname',
          'display': 'shortname',
        },
        'posted': {
          'type': 'date',
          'label': 'Posted'|t,
          'value': meta.posted,
        },
        'published': {
          'type': 'date',
          'label': 'Originally published'|t,
          'value': meta.published,
        },
        'origin': {
          'type': 'link',
          'label': 'Origin'|t,
          'value': {
            'url': meta.origin,
            'title': 'View original'|t,
            'external': true,
          },
        },
      }
    }) }}
  </header>

  <div{{ create_attribute()
    .addClass([
      'rw-article__content',
      image is not empty ? 'rw-article__content--with-image',
    ])
  }}>
    {% if image is not empty %}
      {{ render_var({
        '#theme': 'reliefweb_entities_entity_image',
        '#style': 'large',
        '#image': image,
      }) }}
    {% endif %}

    {# @todo add attachments. #}

    {{ content.body.0|render|sanitize_html(false, 2) }}
  </div>

  {{ node.getSourceDisclaimers() }}

  <footer class="rw-article__footer">
    {# Pre-sort the countries so that we can easily extract the primary country
       (the first one) from the rest. We can then pass sort: null to avoid
       sorting them again. #}
    {% set countries = meta.country|taglist %}

    {{ render_var({
      '#theme': 'reliefweb_entities_entity_details',
      '#title': 'Report details'|t,
      '#title_attributes': create_attribute().addClass('visually-hidden'),
      '#meta': {
        'primary_country': {
          'type': 'taglist',
          'label': 'Primary country'|t,
          'value': countries|slice(0, 1),
          'count': 1,
          'sort': null,
        },
        'country': {
          'type': 'taglist',
          'label': countries|length > 2 ? 'Other countries'|t : 'Other country'|t,
          'value': countries|slice(1),
          'count': null,
          'sort': null,
        },
        'source': {
          'type': 'taglist',
          'label': meta.source|length > 1 ? 'Sources'|t : 'Source'|t,
          'value': meta.source,
          'count': null,
          'sort': 'name',
        },
        'disaster': {
          'type': 'taglist',
          'label': meta.disaster|length > 1 ? 'Disasters'|t : 'Disaster'|t,
          'value': meta.disaster,
          'count': null,
          'sort': 'name',
        },
        'format': {
          'type': 'taglist',
          'label': 'Format'|t,
          'value': meta.format|slice(0, 1),
          'count': 1,
          'sort': 'name',
        },
        'theme': {
          'type': 'taglist',
          'label': meta.theme|length > 1 ? 'Themes'|t : 'Theme'|t,
          'value': meta.theme,
          'count': null,
          'sort': 'name',
        },
        'disaster-type': {
          'type': 'taglist',
          'label': meta.disaster_type|length > 1 ? 'Disaster types'|t : 'Disaster type'|t,
          'value': meta.disaster_type,
          'count': null,
          'sort': 'name',
        },
        'language': {
          'type': 'taglist',
          'label': meta.language|length > 1 ? 'Languages'|t : 'Language'|t,
          'value': meta.language,
          'count': null,
          'sort': 'name',
        },
      }
    }) }}

    {{ node.getShareLinks() }}
  </footer>

</article>

{{ node.getRelatedContent() }}
