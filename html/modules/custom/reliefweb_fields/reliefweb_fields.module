<?php

/**
 * @file
 * Module file for the ReliefWeb Fields module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\filter\FilterFormatInterface;
use Drupal\reliefweb_fields\Plugin\Field\FieldWidget\ReliefWebLinks;
use Drupal\reliefweb_fields\Plugin\Field\FieldWidget\ReliefWebUserPostingRights;

/**
 * Implements hook_theme().
 */
function reliefweb_fields_theme() {
  return [
    'reliefweb_text_with_summary' => [
      'variables' => [
        // Section heading level.
        'level' => 2,
        // Section attributes.
        'attributes' => NULL,
        // Text.
        'text' => NULL,
        // Summary.
        'summary' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_entity_type_build().
 */
function reliefweb_fields_entity_type_build(array &$entity_types) {
  $entity_types['taxonomy_term']->setFormClass('profile', 'Drupal\reliefweb_fields\Form\TaxonomyTermProfile');
  $entity_types['taxonomy_term']->setFormClass('user_posting_rights', 'Drupal\reliefweb_fields\Form\TaxonomyTermUserPostingRights');
  $entity_types['taxonomy_term']->setFormClass('domain_posting_rights', 'Drupal\reliefweb_fields\Form\TaxonomyTermDomainPostingRights');
}

/**
 * Implements hook_ENTITY_TYPE_update() for nodes.
 */
function reliefweb_fields_node_update(EntityInterface $entity) {
  ReliefWebLinks::updateFields('update', $entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for nodes.
 */
function reliefweb_fields_node_delete(EntityInterface $entity) {
  ReliefWebLinks::updateFields('delete', $entity);
}

/**
 * Implements hook_ENTITY_TYPE_update() for users.
 */
function reliefweb_fields_user_update(EntityInterface $entity) {
  ReliefWebUserPostingRights::updateFields('update', $entity);
}

/**
 * Implements hook_ENTITY_TYPE_delete() for nodes.
 */
function reliefweb_fields_user_delete(EntityInterface $entity) {
  ReliefWebUserPostingRights::updateFields('delete', $entity);
}

/**
 * Implements hook_editor_xss_filter_alter().
 *
 * Change the filter XSS class so that we can also convert the text from
 * markdown to HTML or the opposite.
 *
 * @see editor_filter_xss()
 * @see \Drupal\reliefweb_fields\EditorXssFilter\ReliefWebMarkdownXssFilter::filterXss()
 */
function reliefweb_fields_editor_xss_filter_alter(string &$editor_xss_filter_class, FilterFormatInterface $format, ?FilterFormatInterface $original_format = NULL) {
  if (
    editor_load($format->id())?->getEditor() === 'reliefweb_markdown_editor' ||
    !empty($format->filters('reliefweb_formatted_text')?->status)
  ) {
    $editor_xss_filter_class = '\Drupal\reliefweb_fields\EditorXssFilter\ReliefWebMarkdownXssFilter';
  }
}
