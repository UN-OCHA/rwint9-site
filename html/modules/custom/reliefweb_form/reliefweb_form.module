<?php

/**
 * @file
 * Form improvements.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function reliefweb_form_theme() {
  $themes = [
    // Select form element theme with option attributes support.
    'reliefweb_form_select' => [
      'base hook' => 'select',
    ],
  ];
  return $themes;
}

/**
 * Implements hook_element_info_alter().
 */
function reliefweb_form_element_info_alter(array &$info) {
  $info['checkboxes']['#process'][] = 'reliefweb_form_checkboxes_element_process';
  $info['radios']['#process'][] = 'reliefweb_form_radios_element_process';
}

/**
 * Process checkboxes elements.
 *
 * Add the option attributes to the checkbox form element wrappers.
 *
 * @param array $element
 *   The form element.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form interface.
 * @param array $form
 *   The complete form.
 *
 * @return array
 *   The modified form element.
 */
function reliefweb_form_checkboxes_element_process(array $element, FormStateInterface $form_state, array $form) {
  $option_attributes = $element['#option_attributes'] ?? [];
  foreach ($element['#options'] as $key => $choice) {
    $element[$key]['#wrapper_attributes'] = $option_attributes[$key] ?? [];
  }
  return $element;
}

/**
 * Process radios elements.
 *
 * Add the option attributes to the radio form element wrappers.
 *
 * @param array $element
 *   The form element.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The form interface.
 * @param array $form
 *   The complete form.
 *
 * @return array
 *   The modified form element.
 */
function reliefweb_form_radios_element_process(array $element, FormStateInterface $form_state, array $form) {
  $option_attributes = $element['#option_attributes'] ?? [];
  foreach ($element['#options'] as $key => $choice) {
    $element[$key]['#wrapper_attributes'] = $option_attributes[$key] ?? [];
  }
  return $element;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for `select`.
 *
 * Add a theme suggestion to use our select template that supports option
 * attributes.
 */
function reliefweb_form_theme_suggestions_select_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#option_attributes'])) {
    $suggestions[] = 'reliefweb_form_select';
  }
}

/**
 * Implements hook_preprocess_select().
 *
 * Handle option attributes.
 */
function reliefweb_form_preprocess_select(&$variables) {
  $option_attributes = $variables['element']['#option_attributes'] ?? [];
  $options = $variables['options'] ?? [];
  foreach ($options as $index => $option) {
    $key = $option['type'] === 'option' ? 'value' : 'label';
    if (isset($option_attributes[$option[$key]])) {
      $options[$index]['attributes'] = new Attribute($option_attributes[$option[$key]]);
    }
  }
  $variables['options'] = $options;
}

/**
 * Implements hook_form_alter().
 *
 * Add form enhancements.
 */
function reliefweb_form_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  // Enhance the form.
  if (isset($form['#attributes']['data-enhanced']) && \Drupal::currentUser()->hasPermission('use enhanced input forms')) {
    // Attach the widget libraries if there are fields using them.
    reliefweb_form_attach_autocomplete($form);
    reliefweb_form_attach_datepicker($form);
    reliefweb_form_attach_formatting($form);
    reliefweb_form_attach_lengthchecker($form);
    reliefweb_form_attach_selection_limit($form);

    // Attach the guidelines.
    reliefweb_form_attach_guidelines($form);

    // Attach the main enhanced form library.
    $form['#attached']['library'][] = 'reliefweb_form/form.main';
  }
}

/**
 * Attach the autocomplete js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_autocomplete(array &$form) {
  if (reliefweb_form_uses_widget($form, 'autocomplete')) {
    $form['#attached']['library'][] = 'reliefweb_form/widget.autocomplete';
  }
}

/**
 * Attach the datepicker js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_datepicker(array &$form) {
  if (reliefweb_form_uses_widget($form, 'datepicker')) {
    $form['#attached']['library'][] = 'reliefweb_form/widget.datepicker';
  }
}

/**
 * Attach the formatting js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_formatting(array &$form) {
  if (reliefweb_form_uses_widget($form, 'formatting')) {
    $form['#attached']['library'][] = 'reliefweb_form/widget.formatting';
  }
}

/**
 * Attach the guidelines js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_guidelines(array &$form) {
  if (isset($form['#attributes']['data-with-guidelines'])) {
    // @todo add logic once guidelines have been migrated.
  }
}

/**
 * Attach the text length checker js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_lengthchecker(array &$form) {
  if (reliefweb_form_uses_widget($form, 'lengthchecker')) {
    $form['#attached']['library'][] = 'reliefweb_form/widget.lengthchecker';
  }
}

/**
 * Attach the text length checker js scripts to the given form.
 *
 * @param array $form
 *   Form to which attach the js files.
 */
function reliefweb_form_attach_selection_limit(array &$form) {
  if (reliefweb_form_uses_widget($form, 'selection-limit')) {
    $form['#attached']['library'][] = 'reliefweb_form/widget.selectionlimit';
  }
}

/**
 * Check if the form has a field that uses a widget (ex: datepicker, wysiwyg).
 *
 * @param array $element
 *   Form element to check.
 * @param string $widget
 *   Name of the widget.
 *
 * @return bool
 *   Whether the form has a field that uses the widget or not.
 */
function reliefweb_form_uses_widget(array $element, $widget) {
  foreach (Element::children($element) as $key) {
    $child = $element[$key];
    if (is_array($child)) {
      if (isset($child['#attributes']['data-with-' . $widget])) {
        return TRUE;
      }
      // Check children as well.
      if (reliefweb_form_uses_widget($child, $widget)) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

/**
 * Implements hook_module_implements_alter().
 *
 * Try to ensure that the reliefweb_form form_alter hook runs last as it
 * needs to parse the form element to decide whether to attach the widget
 * libraries.
 */
function reliefweb_form_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter' && isset($implementations['reliefweb_form'])) {
    $group = $implementations['reliefweb_form'];
    unset($implementations['reliefweb_form']);
    $implementations['reliefweb_form'] = $group;
  }
}
