<?php

/**
 * @file
 * Install, update, and uninstall functions for the ReliefWeb Import module.
 */

/**
 * Implements hook_schema().
 */
function reliefweb_import_schema() {
  $schema['reliefweb_import_records'] = [
    'description' => 'Stores the records of imported items.',
    'fields' => [
      'imported_item_uuid' => [
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'description' => 'The UUID of the imported item.',
      ],
      'imported_item_url' => [
        'type' => 'varchar',
        'length' => 2048,
        'not null' => TRUE,
        'description' => 'The URL of the imported item.',
      ],
      'imported_item_id' => [
        'type' => 'varchar',
        'length' => 255,
        'description' => 'The ID of the imported item from the import feed.',
      ],
      'imported_data_hash' => [
        'type' => 'varchar',
        'length' => 64,
        'description' => 'SHA256 hash of the imported data for integrity verification.',
      ],
      'importer' => [
        'type' => 'varchar_ascii',
        'length' => 128,
        'description' => 'The machine name of the importer used.',
      ],
      'provider_uuid' => [
        'type' => 'varchar',
        'length' => 128,
        'description' => 'The UUID of the provider of the imported item.',
      ],
      'entity_type_id' => [
        'type' => 'varchar_ascii',
        'length' => 128,
        'description' => 'The entity type of the imported item.',
      ],
      'entity_bundle' => [
        'type' => 'varchar_ascii',
        'length' => 128,
        'description' => 'The bundle of the imported item.',
      ],
      'entity_id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'The ID of the imported entity (only filled in case of successful import).',
      ],
      'entity_revision_id' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'description' => 'The revision ID of the imported entity.',
      ],
      'status' => [
        'type' => 'varchar_ascii',
        'length' => 32,
        'not null' => TRUE,
        'description' => 'The status of the import (e.g., queued, error, success).',
      ],
      'attempts' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The number of import attempts.',
      ],
      'created' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The Unix timestamp when the item was first queued for import.',
      ],
      'changed' => [
        'type' => 'int',
        'not null' => TRUE,
        'description' => 'The Unix timestamp of the last update to this record.',
      ],
      'message' => [
        'type' => 'text',
        'size' => 'big',
        'description' => 'The message for the last update of this record (e.g., error message).',
      ],
      'source' => [
        'type' => 'varchar',
        'length' => '254',
        'description' => 'The source name.',
      ],
      'extra' => [
        'type' => 'json',
        'pgsql_type' => 'json',
        'mysql_type' => 'json',
        'sqlite_type' => 'text',
        'not null' => FALSE,
        'description' => 'Store extra information.',
      ],
      'status_type' => [
        'type' => 'varchar',
        'length' => '254',
        'description' => 'The status type, provides more granular info.',
      ],
      'editorial_flow' => [
        'type' => 'varchar',
        'length' => '254',
        'description' => 'The editorial flow.',
      ],
    ],
    'primary key' => ['imported_item_uuid'],
    'indexes' => [
      'status' => ['status'],
      'entity_type_bundle' => ['entity_type_id', 'entity_bundle'],
      'importer' => ['importer'],
      'imported_item_url' => ['imported_item_url'],
      'imported_item_id' => ['imported_item_id'],
    ],
  ];

  return $schema;
}

/**
 * Implements hook_update_N().
 *
 * Create the reliefweb_import_records table.
 */
function reliefweb_import_update_10001(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';

  if (!$schema->tableExists($table_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->createTable($table_name, $table_schema[$table_name]);
  }
}

/**
 * Implements hook_update_N().
 *
 * Add extra column to the reliefweb_import_records table.
 */
function reliefweb_import_update_10002(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';
  $field_name = 'extra';

  if (!$schema->fieldExists($table_name, $field_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->addField($table_name, $field_name, $table_schema[$table_name]['fields'][$field_name]);
  }
}

/**
 * Implements hook_update_N().
 *
 * Add extra column to the reliefweb_import_records table.
 */
function reliefweb_import_update_10003(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';
  $field_name = 'source';

  if (!$schema->fieldExists($table_name, $field_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->addField($table_name, $field_name, $table_schema[$table_name]['fields'][$field_name]);

    // Update existing records.
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET source = SUBSTR(SUBSTRING_INDEX(json_extract(extra, '$.inoreader.feed_name'), '[source:', 1), 2) where extra is not null");
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET source = 'ECHO Flash Update' where importer = 'echo_flash_update'");
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET source = 'ECHO Map' where importer = 'echo_map'");
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET source = 'UNHCR Data' where importer = 'unhcr_data'");
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET source = 'WFP Logcluster' where importer = 'wfp_logcluster'");
  }
}

/**
 * Implements hook_update_N().
 *
 * Change source to varchar.
 */
function reliefweb_import_update_10004(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';
  $field_name = 'source';

  if ($schema->fieldExists($table_name, $field_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->changeField($table_name, $field_name, $field_name, $table_schema[$table_name]['fields'][$field_name]);
  }
}

/**
 * Implements hook_update_N().
 *
 * Add status_type column to the reliefweb_import_records table.
 */
function reliefweb_import_update_10005(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';
  $field_name = 'status_type';

  if (!$schema->fieldExists($table_name, $field_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->addField($table_name, $field_name, $table_schema[$table_name]['fields'][$field_name]);
  }
}

/**
 * Implements hook_update_N().
 *
 * Add editorial_flow column to the reliefweb_import_records table.
 */
function reliefweb_import_update_10006(array &$sandbox) {
  $schema = \Drupal::database()->schema();
  $table_name = 'reliefweb_import_records';
  $field_name = 'editorial_flow';

  if (!$schema->fieldExists($table_name, $field_name)) {
    $table_schema = reliefweb_import_schema();
    $schema->addField($table_name, $field_name, $table_schema[$table_name]['fields'][$field_name]);

    // Update records to set the editorial flow to 'to_process'.
    \Drupal::database()->query("UPDATE {reliefweb_import_records} SET editorial_flow = 'to_process', status_type = '' WHERE status_type = 'to_process';");
  }
}

/**
 * Implements hook_update_N().
 *
 * Cleanup status and editorial flow.
 */
function reliefweb_import_update_10007(array &$sandbox) {
  \Drupal::database()->query("update {reliefweb_import_records} set status_type = '' where status_type = 'processed'");
  \Drupal::database()->query("update {reliefweb_import_records} set status_type = '' where status = 'success'");
  \Drupal::database()->query("update {reliefweb_import_records} set editorial_flow = 'manual', status_type = '' where status_type = 'manual'");
  \Drupal::database()->query("update {reliefweb_import_records} set status_type = 'no_body' where status_type = 'empty_body'");
  \Drupal::database()->query("update {reliefweb_import_records} set status_type = '' where status_type = 'to_process'");
  \Drupal::database()->query("update {reliefweb_import_records} set status_type = '' where status_type = 'reset_attempts'");
}
