<?php

/**
 * @file
 * Contains extended_field_description.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\extended_field_description\Entity\DescriptionEntity;
use Drupal\Core\Entity\ContentEntityForm;


/**
 * Implements hook_help().
 */
function extended_field_description_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the extended_field_description module.
    case 'help.page.extended_field_description':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('My Awesome Module') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function extended_field_description_theme() {
  return [
    'extended_field_description' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_field_widget_form_alter().
 */
function extended_field_description_field_widget_form_alter(&$element, FormStateInterface &$form_state, $context) {
  static $description = [];

  $bundle = '';
  $form_object = $form_state->getFormObject();
  $entity_type = $form_object->getEntity()->getEntityType()->id();
  if ($form_object instanceof ContentEntityForm) {
    $bundle = $form_object->getEntity()->bundle();
  }
  $field_name = $context['items']->getName();

  if (!isset($descriptions[$entity_type])) {
    /** @var Drupal\extended_field_description\Entity\DescriptionEntity[] $description_entities */
    $description_entities = DescriptionEntity::loadByEntity($entity_type);
    foreach ($description_entities as $description_entity) {
      foreach ($description_entity->field_field as $field) {
        $descriptions[$entity_type][$field->target_id] = $description_entity;
      }
    }
  }

  $key = $entity_type . '.' . $bundle . '.' . $field_name;
  if (isset($descriptions[$entity_type][$key])) {

    $view_builder = \Drupal::entityTypeManager()->getViewBuilder('description_entity');
    $pre_render = $view_builder->view($descriptions[$entity_type][$key], 'default');
    $render_output = render($pre_render);
    $element['value']['#description'] = $render_output;
  }
}
