<?php

/**
 * @file
 * OCHA AI Job tagging.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\reliefweb_moderation\Helpers\UserPostingRightsHelper;
use Drupal\reliefweb_utility\Helpers\MarkdownHelper;
use Drupal\reliefweb_utility\Helpers\UserHelper;

/**
 * Implements hook_form_HOOK_alter().
 */
function reliefweb_job_tagger_form_node_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $form_ids = [
    'node_job_edit_form',
    'node_job_form',
  ];

  if (!in_array($form_id, $form_ids)) {
    return;
  }

  $user = \Drupal::currentUser();

  if ($form_id == 'node_job_edit_form') {
    $entity = $form_state->getFormObject()->getEntity();
    if ($entity->hasField('reliefweb_job_tagger_info') && !$entity->reliefweb_job_tagger_info->IsEmpty()) {
      if (UserHelper::userHasRoles(['editor'])) {
        $message = $entity->reliefweb_job_tagger_info->value;
        $message = MarkdownHelper::convertToHtml($message);

        $form['ai_feedback'] = [
          '#type' => 'processed_text',
          '#text' => $message,
          '#format' => 'html',
          '#weight' => -90,
        ];
      }
    }
  }

  // Check permissions.
  if ($user->hasPermission('bypass ocha ai job tag')) {
    return;
  }

  if (!$user->hasPermission('enforce ocha ai job tag')) {
    return;
  }

  $sources = array_keys(UserPostingRightsHelper::getUserPostingRights());
  if (empty($sources)) {
    $form['field_job_experience']['#access'] = FALSE;
    $form['field_career_categories']['#access'] = FALSE;
    $form['field_theme']['#access'] = FALSE;
    return;
  }

  $fields = [
    'field_job_experience',
    'field_career_categories',
    'field_theme',
  ];

  $conditions = [];
  $not_conditions = [];
  foreach ($sources as $source) {
    $conditions[] = [
      'value' => $source,
    ];
    $not_conditions[] = [
      '!value' => $source,
    ];
  }

  foreach ($fields as $field) {
    $form[$field]['#states'] = [
      'visible' => [
        'select[name="field_source"]' => $conditions,
      ],
      'required' => [
        'select[name="field_source"]' => $conditions,
      ],
      'optional' => [
        'select[name="field_source"]' => $not_conditions,
      ],
    ];
  }
}

/**
 * Implements hook_entity_base_field_info().
 */
function reliefweb_job_tagger_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];

  if ($entity_type->id() == 'node') {
    $fields['reliefweb_job_tagger_info'] = BaseFieldDefinition::create('text_long')
      ->setLabel(t('AI info'))
      ->setDescription(t('Info from the AI.'))
      ->setSetting('allowed_formats', [
        0 => 'markdown',
      ])
      ->setRevisionable(TRUE)
      ->setRequired(FALSE);
  }

  return $fields;
}
