<?php

/**
 * @file
 * Integration of the ReliefWeb Rivers.
 */

/**
 * Implements hook_theme().
 */
function reliefweb_rivers_theme() {
  $themes = [
    'reliefweb_rivers_page' => [
      'variables' => [
        // The river name.
        'river' => '',
        // The current river view.
        'view' => '',
        // The river title.
        'title' => '',
        // The article entities to display.
        'entities' => [],
        // Render array. See "reliefweb_rivers_views" below.
        'views' => [],
        // Render array. See "reliefweb_rivers_search" below.
        'search' => NULL,
        // Render array. See "reliefweb_rivers_results" below.
        'results' => NULL,
        // Render array. See "reliefweb_rivers_advanced_search" below.
        'advanced_search' => NULL,
        // The pager for the river.
        'pager' => NULL,
        // Render array. See "reliefweb_rivers_links" below.
        'links' => [],
      ],
    ],
    'reliefweb_rivers_views' => [
      'variables' => [
        // The headling level.
        'level' => 2,
        // Section title.
        'title' => t('Views'),
        // The list of alternative views for the river with url, title and
        // selected flag for each view.
        'views' => [],
      ],
    ],
    'reliefweb_rivers_search' => [
      'variables' => [
        // The headling level.
        'level' => 2,
        // Section title.
        'title' => t('Search'),
        // The river path.
        'path' => '',
        // List (name => value) of query parameters to preserve.
        'parameters' => [],
        // The input label and placeholder.
        'label' => t('Search with keywords'),
        // The full text search query.
        'query' => NULL,
      ],
    ],
    'reliefweb_rivers_results' => [
      'variables' => [
        // The total number of resources matching the search query.
        'total' => 0,
        // The start of the result range.
        'start' => 0,
        // The end of the result range.
        'end' => 0,
      ],
    ],
    'reliefweb_rivers_advanced_search' => [
      'variables' => [
        // The headling level.
        'level' => 3,
        // Section title.
        'title' => t('Advanced search'),
        // The filters for the advanced search.
        'advanced_search' => NULL,
      ],
    ],
    'reliefweb_rivers_links' => [
      'variables' => [
        // The headling level.
        'level' => 3,
        // Section title.
        'title' => t('API and RSS links'),
        // The API/RSS links for the river.
        'links' => [],
      ],
    ],
    'reliefweb_rivers_river' => [
      'variables' => [
        // Heading level for the river section.
        'level' => 2,
        // The id of the river section.
        'id' => '',
        // The API resource (ex: reports).
        'resource' => '',
        // Title of the river section.
        'title' => '',
        // The total number of entities for the river's search query.
        'total' => 0,
        // The article entities to display.
        'entities' => [],
        // Array with the URL to the full river and a text.
        'more' => NULL,
      ],
    ],
    'reliefweb_rivers_river_article' => [
      'variables' => [
        // Heading level for the river article.
        'level' => 3,
        // The aricle entity's data as an associative array with id, bundle,
        // url, langcode, title etc.
        'entity' => NULL,
      ],
    ],
    'reliefweb_rivers_river_article_title' => [
      'variables' => [
        // Heading level for the river article title.
        'level' => 3,
        // Language code of the title.
        'langcode' => 'en',
        // An optional HTML safe prefix.
        'prefix' => '',
        // URL to the full article.
        'url' => '',
        // Title to the article.
        'title' => '',
      ],
    ],
  ];

  // Add themes for the main riverarticles.
  $bundles = [
    'blog_post',
    'disaster',
    'job',
    'report',
    'source',
    'training',
  ];
  foreach ($bundles as $bundle) {
    $themes['reliefweb_rivers_river_article__' . $bundle] = [
      'base hook' => 'reliefweb_rivers_river_article',
    ];
  }

  return $themes;
}

/**
 * Implements hook_theme_suggestions_HOOK().
 *
 * Add suggestions for the river article theme based on bundle.
 */
function reliefweb_rivers_theme_suggestions_reliefweb_rivers_river_article(array $variables) {
  $suggestions = [];

  if (!empty($variables['entity']['bundle'])) {
    $suggestions[] = 'reliefweb_rivers_river_article__' . $variables['entity']['bundle'];
  }

  return $suggestions;
}
