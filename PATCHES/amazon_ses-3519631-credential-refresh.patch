diff --git a/src/AmazonSesHandler.php b/src/AmazonSesHandler.php
index 2e90969..dab091f 100644
--- a/src/AmazonSesHandler.php
+++ b/src/AmazonSesHandler.php
@@ -7,6 +7,7 @@ use Aws\Result;
 use Aws\SesV2\Exception\SesV2Exception;
 use Drupal\amazon_ses\Event\MailSentEvent;
 use Drupal\aws\AwsClientFactoryInterface;
+use Drupal\aws\Entity\ProfileInterface;
 use Drupal\Core\Config\ConfigFactoryInterface;
 use Drupal\Core\Logger\LoggerChannelInterface;
 use Drupal\Core\Messenger\MessengerInterface;
@@ -234,6 +235,18 @@ class AmazonSesHandler implements AmazonSesHandlerInterface {
    * so we can continue.
    */
   protected function refreshClient() {
+    // During a drush job, REQUEST_TIME is set to the start of the job and
+    // never updates. That means the cached credentials will *never* expire
+    // and that means we need to manually delete them.
+    //
+    // @see Drupal\aws\Entity\Profile::getTemporaryCredentials()
+    //
+    // @todo Dependency injection.
+    $aws_profile = \Drupal::service('aws')->getProfile('sesv2');
+    if (isset($aws_profile)) {
+      \Drupal::service('keyvalue.expirable')->get('aws_profile')->delete($aws_profile->id());
+    }
+
     $this->client = $this->awsClientFactory->getClient('sesv2');
     $this->logger->info('Refreshing the SesV2 client after the session token expired');
   }
