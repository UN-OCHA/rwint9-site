## Public attachments
location /attachments/ {
  ## Use our custom 404 handler so we can set the content disposition
  ## to inline to prevent the browser from downloading a file with the
  ## "404 Not Found" message.
  error_page 404 @attachment-404;

  ## If the file matches the attachment pattern, check if there is a local file
  ## otherwise pass the request to the docstore.
  location ~ "^/attachments/([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/(?<file_name>[^/]+)(?<file_ext>\.[0-9a-zA-Z]+)$" {
    ## Force download of the file.
    add_header Content-Disposition 'attachment; filename="$file_name$file_ext"';

    ## Try the local file first then the remote one.
    try_files "$document_root/sites/default/files/attachments/$1/$2/$1$2$3$5" @docstore-file;
  }

  return 404;
}

## Private attachments
location /private/attachments/ {
  ## Use our custom 404 handler so we can set the content disposition
  ## to inline to prevent the browser from downloading a file with the
  ## "404 Not Found" message.
  error_page 404 @attachment-404;

  ## If the file matches the attachment pattern, pass the request to Drupal
  ## so that it can check access to the file.
  location ~ "^/attachments/([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/(?<file_name>[^/]+)(?<file_ext>\.[0-9a-zA-Z]+)$" {
    ## Force download of the file.
    add_header Content-Disposition 'attachment; filename="$file_name$file_ext"';

    ## Try drupal.
    try_files @drupal =404;
  }

  return 404;
}

## Request to the docstore.
location @docstore-file {
  ## Use our custom 404 handler so we can set the content disposition
  ## to inline to prevent the browser from downloading a file with the
  ## "404 Not Found" message.
  error_page 404 @attachment-404;

  ## Make sure we can catch the 404 error to be able to use our handler.
  proxy_intercept_errors on;

  ## Remove the content disposition header to avoid unwanted encoding of the
  ## filename (ex: "My%20file.pdf" instead of "My file.pdf"). See DOC-72.
  proxy_hide_header Content-Disposition;

  ## Force download of the file.
  add_header Content-Disposition 'attachment; filename="$file_name$file_ext"';

  ## Set the docstore provider UUID header so that we can get the proper
  ## version of the file for the provider.
  set_by_lua $x_docstore_provider_uuid_from_env 'return os.getenv("X_DOCSTORE_PROVIDER_UUID") or "latest"';
  proxy_set_header X-Docstore-Provider-Uuid "$x_docstore_provider_uuid_from_env";

  ## Rewrite the url to what the docstore wants.
  rewrite /attachments/(.+)$ /files/$1 break;
  proxy_pass http://docstore.ahconu.org.internal;

  ## Override connection and buffer vars: do not attempt to buffer, just throw
  ## the data out right away and close the docstore connection when done.
  proxy_set_header Connection '';
  proxy_buffering off;
  tcp_nodelay on;
  tcp_nopush off;
}

## 404 handler for attachments that prevent browsers from downloading a file
## with the attachment file name but containing a "404 Not Found" message.
location @attachment-404 {
  add_header Content-Type 'text/plain' always;
  add_header Content-Disposition 'inline' always;
  return 404 "404 Not Found";
}
