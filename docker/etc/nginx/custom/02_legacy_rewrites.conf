#
# Old URLs redirection.
#

# Training.
rewrite ^/trainings                   /training permanent;

# Old site archives.
rewrite ^/rwarchive(.*)               /rw$1 permanent;

# Files.
if ($uri ~ \$file) {
  # Report.
  rewrite ^/r?w/(rwb|lib)\.nsf        /updates? permanent;

  # Job.
  rewrite ^/r?w/(res)\.nsf            /jobs? permanent;

  # Training.
  rewrite ^/r?w/(rwt)\.nsf            /training? permanent;

  # Map.
  rewrite (?i)^/r?w/fullmaps          /maps? permanent;

  # Other.
  rewrite (?i)^/r?w/                  /? permanent;
}

# ISO3.
if ($arg_cc != "") {
  # FTS.
  rewrite ^/r?w/[^/]+\.nsf/doc105     http://fts.unocha.org/pageloader.aspx?page=emerg-emergencyCountryDetails&cc=$arg_cc? permanent;

  # Key documents.
  rewrite ^/r?w/[^/]+\.nsf/doc200     /country/$arg_cc#key-content? permanent;

  # Maps
  rewrite ^/r?w/[^/]+\.nsf/doc404     /country/$arg_cc#maps-infographics? permanent;

  # Country jobs.
  rewrite ^/r?w/[^/]+\.nsf/doc212     /country/$arg_cc#jobs? permanent;

  # Country training.
  rewrite ^/r?w/[^/]+\.nsf/doc209     /country/$arg_cc#training? permanent;

  # Country.
  rewrite ^/r?w/[^/]+\.nsf/doc\d+     /country/$arg_cc? permanent;

  # RSS.
  rewrite (?i)^/RWFeed                /updates/rss.xml?search=primary_country.iso3.exact:$arg_cc? permanent;
}

# GLIDE.
set $glide "";
if ($arg_emid != "") {
  set $glide $arg_emid;
}
if ($arg_emi != "") {
  set $glide $arg_emi;
}
if ($glide != "") {
  # FTS.
  rewrite ^/r?w/[^/]+\.nsf/doc105     http://fts.unocha.org? permanent;

  # Key documents.
  rewrite ^/r?w/[^/]+\.nsf/doc200     /disaster/$glide#key-content? permanent;

  # Maps.
  rewrite ^/r?w/[^/]+\.nsf/doc404     /disaster/$glide#maps-infographics? permanent;

  # Disaster.
  rewrite ^/r?w/[^/]+\.nsf/doc\d+     /disaster/$glide? permanent;

  # RSS.
  rewrite (?i)^/RWFeed                /updates/rss.xml?search=disaster.glide.exact:$glide? permanent;
}

# RSS.
rewrite (?i)^/RWFeed                  /updates/rss.xml? permanent;

# OCHA jobs.
if ($arg_srcid ~* ocha) {
  rewrite ^/r?w/srch\.nsf/doc304      /jobs?advanced-search=(S1503)? permanent;
}

# Internships.
if ($args ~ intern|stag|pasant|practicante) {
  rewrite ^/r?w/srch\.nsf/doc304      /jobs?advanced-search=(TY265)? permanent;
}

# Jobs.
rewrite ^/vacancies                   /jobs? permanent;
rewrite ^/job$                        /jobs? permanent;
rewrite /vac_map                      /jobs? permanent;
rewrite ^/r?w/(dbc|res)\.nsf/doc(215|212)   /jobs? permanent;
rewrite ^/r?w/srch\.nsf/doc(302|304)  /jobs?search=$arg_query? permanent;

# Training
rewrite ^/r?w/[^/]+\.nsf/doc211       /training? permanent;

# Updates
rewrite ^/r?w/[^/]+\.nsf/doc106       /updates? permanent;
rewrite ^/r?w/srch.nsf                /updates? permanent;

# Updates by country.
rewrite (?i)^/r?w/[^/]+\.nsf/ByCountry/([^/]+)  /updates?search=country:$1? permanent;

# Countries & Emergencies.
rewrite ^/r?w/dbc\.nsf/doc(103|401|115) /countries? permanent;

# Disasters.
rewrite ^/disaster$                   /disasters? permanent;

# Burundi maps.
rewrite ^/ochaburundi                 /country/bdi#maps-infographics? permanent;

# Maps.
rewrite ^/map$                        /maps? permanent;
rewrite ^/r?w/map.nsf                 /maps? permanent;
rewrite (?i)^/r?w/fullMaps            /maps? permanent;
rewrite ^/r?w/rwb\.nsf/doc114         /maps? permanent;
rewrite ^/mapc/                       /maps?advanced-search=(F12)? permanent;

# OCHA online.
rewrite (?i)^/ocha_ol                 http://unocha.org? permanent;

# IRIN.
rewrite (?i)^/irin                    http://www.irinnews.org? permanent;

# FTS.
rewrite (?i)^/fts                     http://fts.unocha.org? permanent;

# OCHA UNEP.
rewrite (?i)^/ocha.*unep              http://unocha.org/unep? permanent;

# About.
rewrite (?i)AboutReliefWeb            /about? permanent;

# Help.
rewrite ^/r?w/hlp.nsf                 /help? permanent;

# Home.
rewrite (?i)^/(library|int)           /? permanent;
rewrite ^/r?w/dbc\.nsf/doc100         /? permanent;
rewrite ^/r?w/rwb\.nsf/?$             /? permanent;

# River redirections.
rewrite ^/rss.xml$                                                                 /updates/rss.xml permanent;
rewrite ^/headlines(/rss\.xml)?$                                                   /updates$1?view=headlines permanent;
rewrite ^/(maps|updates/thumb)(/rss\.xml)?$                                        /updates$2?view=maps permanent;
rewrite ^/updates/no-thumb(/rss\.xml)?$                                            /updates$1?view=reports permanent;
rewrite ^/(country|disaster|taxonomy/term)/([a-zA-Z0-9-]+)(/rss\.xml)$             /updates$3?legacy-river=$1/$2 permanent;
rewrite ^/(country|disaster|taxonomy/term)/([a-zA-Z0-9-]+)/thumb(/rss\.xml)?$      /updates$3?view=maps&legacy-river=$1/$2 permanent;
rewrite ^/(country|disaster|taxonomy/term)/([a-zA-Z0-9-]+)/no-thumb(/rss\.xml)?$   /updates$3?view=reports&legacy-river=$1/$2 permanent;
rewrite ^/(country|disaster|taxonomy/term)/([a-zA-Z0-9-]+)/key-content$            /$1/$2 permanent;
rewrite ^/training/(free|online|workshop|academic)(/rss\.xml)?$                    /training$2?view=$1 permanent;
